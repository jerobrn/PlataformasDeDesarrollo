@page "/ListadoDetalles/"
  

    @using BlazorApp1.Data
    @inject DetallesService DetServ
    @inject NavigationManager navigation
    @inject IJSRuntime JsRuntime


    <h3>Detalles</h3>

    <button class="btn btn-primary" @onclick="()=>Editar(0)">Nuevo</button>

    @if (det == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>

                    <th>Recurso</th>
                    <th>Fecha</th>
                    <th>Tiempo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var Detalles in det)
                {
                    <tr>

                        <td>@Detalles.IdRecursos</td>
                        <td>@Detalles.Fecha</td>
                        <td>@Detalles.Tiempo</td>
                        <td><button class="btn btn-primary" @onclick="()=>Editar(Detalles.IDDetalle)">Editar</button> <button class="btn btn-primary" @onclick="()=>Borrar(Detalles.IDDetalle)">Borrar</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }


    @code {
      

        private List<Detalles> det = new List<Detalles>();
        public string RecID { get; set; }
        public Recursos Rec { get; set; } = new Recursos();

        protected override async Task OnInitializedAsync()
        {



                det = await DetServ.GetAll();
            


        }



        protected void Editar(int id)
        {
            navigation.NavigateTo("EditarDetalle/" + id );
        }

        async Task Borrar(int id)
        {
            bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar el detalle?");
            if (confirmed)
            {
                await DetServ.Borrar(id);
                det = await DetServ.GetAll();

            }
        }


    }

