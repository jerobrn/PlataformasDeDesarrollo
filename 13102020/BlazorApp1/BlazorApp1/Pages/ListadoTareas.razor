@page "/ListadoTareas"

<h3>ListadoTareas</h3>
@using BlazorApp1.Data
@inject TareasService TareaServ
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime


<h1>Listado de Tareas</h1>

<button class="btn" @onclick="()=>Editar(0)">Nuevo</button>

@if (tar == null)
{ 
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>

                <th>Titulo</th>
                <th>Responsable</th>
                <th>Estimación</th>
                <th>Estado</th>
                <th>Acciones</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var Tareas in tar)
            {
            <tr>

                <td>@Tareas.Titulo</td>
                <td>@Tareas.IdRecursos</td>
                <td>@Tareas.Estimacion</td>
                <td>@Tareas.Estado</td>
                <td>
                    <button class="btn" @onclick="()=>Editar(Tareas.IDTarea)">Editar</button>
                    <button class="btn" @onclick="()=>Detalle(Tareas.IDTarea)">Detalles</button>
                    <button class="btn" @onclick="()=>Borrar(Tareas.IDTarea)">Borrar</button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}


@code {

    private List<Tareas> tar;

    protected override async Task OnInitializedAsync()
    {
        tar = await TareaServ.GetAllTareas();
    }



    protected void Editar(int id)
    {
        navigation.NavigateTo("EditarTarea/" + id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea eliminar la Tarea?");
        if (confirmed)
        {
            await TareaServ.Borrar(id);
            tar = await TareaServ.GetAllTareas();

        }
    }
    protected void Detalle(int id)
    {

        navigation.NavigateTo("ListadoDetalles/" + id);
    }


}

